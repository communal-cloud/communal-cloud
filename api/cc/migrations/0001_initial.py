# Generated by Django 2.1.7 on 2019-05-26 16:24

import cc.UserManager
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('is_superuser', models.BooleanField(null=True)),
                ('is_active', models.BooleanField(null=True)),
                ('is_staff', models.BooleanField(null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', cc.UserManager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ActivationToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=50, unique=True)),
                ('userId', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BaseModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreatedOn', models.DateTimeField(editable=False)),
                ('ModifiedOn', models.DateTimeField(editable=False)),
                ('Deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cc.BaseModel')),
                ('Name', models.CharField(max_length=100)),
            ],
            bases=('cc.basemodel',),
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cc.BaseModel')),
                ('Name', models.CharField(max_length=50)),
                ('Purpose', models.CharField(blank=True, max_length=250, null=True)),
                ('Description', models.CharField(blank=True, max_length=5000, null=True)),
                ('IsCompleted', models.BooleanField(default=False)),
                ('Categories', models.ManyToManyField(blank=True, related_name='Categories', to='cc.Category')),
            ],
            bases=('cc.basemodel',),
        ),
        migrations.CreateModel(
            name='DataEnumeration',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cc.BaseModel')),
                ('Name', models.CharField(max_length=50)),
                ('Value', jsonfield.fields.JSONField(default='{}')),
            ],
            bases=('cc.basemodel',),
        ),
        migrations.CreateModel(
            name='DataField',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cc.BaseModel')),
                ('Name', models.CharField(max_length=50)),
                ('Type', models.IntegerField(choices=[(0, 'NotSpecified'), (1, 'Integer'), (2, 'String'), (3, 'Boolean'), (4, 'DateTime'), (5, 'GeoLocation'), (6, 'Relation'), (7, 'User'), (8, 'Image')])),
                ('Parameters', jsonfield.fields.JSONField(default='{}')),
                ('Saved', models.BooleanField(default=False)),
                ('Enumerations', models.ManyToManyField(blank=True, to='cc.DataEnumeration')),
            ],
            bases=('cc.basemodel',),
        ),
        migrations.CreateModel(
            name='DataType',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cc.BaseModel')),
                ('Name', models.CharField(max_length=50)),
                ('Community', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='cc.Community')),
                ('Fields', models.ManyToManyField(blank=True, to='cc.DataField')),
            ],
            bases=('cc.basemodel',),
        ),
        migrations.CreateModel(
            name='Execution',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cc.BaseModel')),
            ],
            bases=('cc.basemodel',),
        ),
        migrations.CreateModel(
            name='ExecutionData',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cc.BaseModel')),
                ('Value', jsonfield.fields.JSONField(default='{}')),
                ('DataGroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='cc.ExecutionData')),
                ('Field', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='cc.DataField')),
            ],
            bases=('cc.basemodel',),
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cc.BaseModel')),
                ('Banned', models.BooleanField(default=False)),
                ('Community', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cc.Community')),
            ],
            bases=('cc.basemodel',),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cc.BaseModel')),
                ('Name', models.CharField(max_length=50)),
                ('SystemDefined', models.BooleanField(default=True)),
            ],
            bases=('cc.basemodel',),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cc.BaseModel')),
                ('Name', models.CharField(max_length=50)),
                ('Description', models.CharField(max_length=5000)),
                ('Available', models.BooleanField(default=False)),
                ('AvailableTill', models.DateField(blank=True, null=True)),
                ('AvailableTimes', models.IntegerField(default=0)),
                ('Type', models.IntegerField(choices=[(0, 'NotSpecified'), (1, 'Execution'), (2, 'Join'), (3, 'Leave')])),
                ('AssignedRoles', models.ManyToManyField(blank=True, to='cc.Role')),
                ('AssignedUsers', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('InputFields', models.ManyToManyField(blank=True, related_name='InputFields', to='cc.DataField')),
                ('OutputFields', models.ManyToManyField(blank=True, related_name='OutputFields', to='cc.DataField')),
                ('Predecessors', models.ManyToManyField(blank=True, to='cc.Task')),
            ],
            bases=('cc.basemodel',),
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cc.BaseModel')),
                ('Name', models.CharField(max_length=50)),
                ('Description', models.CharField(max_length=5000)),
                ('Community', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='cc.Community')),
            ],
            bases=('cc.basemodel',),
        ),
        migrations.AddField(
            model_name='task',
            name='Workflow',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='cc.Workflow'),
        ),
        migrations.AddField(
            model_name='member',
            name='Roles',
            field=models.ManyToManyField(blank=True, to='cc.Role'),
        ),
        migrations.AddField(
            model_name='member',
            name='User',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='execution',
            name='Data',
            field=models.ManyToManyField(blank=True, to='cc.ExecutionData'),
        ),
        migrations.AddField(
            model_name='execution',
            name='ExecutedBy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='execution',
            name='Task',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='cc.Task'),
        ),
        migrations.AddField(
            model_name='community',
            name='Roles',
            field=models.ManyToManyField(blank=True, to='cc.Role'),
        ),
    ]
